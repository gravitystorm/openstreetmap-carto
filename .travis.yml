language: node_js
dist: trusty
sudo: false
node_js:
  - "6"
services:
  - postgresql
addons:
  postgresql: "9.4"
  apt:
    packages:
    - lua5.1
    - libxml2-utils
    - python-yaml
    - postgresql-9.4-postgis-2.3
    - osm2pgsql
env:
  - CARTO=0.18.0 MAPNIK='3.0.0 3.0.12'
install:
  - npm install carto@$CARTO
  - pip install --user colormath
  - mkdir -p data/world_boundaries data/simplified-water-polygons-split-3857 data/ne_110m_admin_0_boundary_lines_land data/water-polygons-split-3857
  - touch data/simplified-water-polygons-split-3857/simplified_water_polygons.shp data/ne_110m_admin_0_boundary_lines_land/ne_110m_admin_0_boundary_lines_land.shp data/water-polygons-split-3857/water_polygons.shp
  - createdb -w -E utf8 -U postgres gis && psql -Xq -d gis -U postgres -w -c "CREATE EXTENSION postgis; CREATE EXTENSION hstore;"
script:
  # We're using pipes in the checks, so fail if any part fails
  - set -o pipefail
  # Check all tye YAML files are valid YAML
  - find . -not \( -path ./node_modules -prune \) \( -type f -name '*.yaml' -o -name '*.yml' -o -name '*.mml' \)
     -exec python -c "from yaml import safe_load; safe_load(file('{}'))" \;
  # Validate the MML against multiple Mapnik versions, and report its lines for debugging purposes
  - for m in $MAPNIK; do ./node_modules/carto/bin/carto -a $m project.mml | xmllint - | wc -l; done
  # Validate that the SVGs are valid XML
  - find symbols/ -name '*.svg' | xargs xmllint --noout
  # Check the Lua transforms
  - lua scripts/lua/test.lua
  # Check the indexes and road colours files are up to date
  - diff -qu <(scripts/indexes.py) indexes.sql
  - diff -qu <(scripts/generate_road_colours.py) road-colors-generated.mss
  # Create the PostgreSQL tables
  # Because we're not processing any data, we don't need to use the tag transform script,
  # which the ancient verson of osm2pgsql on Travis' Ubuntu doesn't support
  - osm2pgsql -G --hstore --style openstreetmap-carto.style -U postgres -d gis -r libxml2 <(echo '<osm version="0.6"/>')
  # Apply the custom indexes
  - psql -1Xq -v ON_ERROR_STOP=1 -d gis -f indexes.sql
  # Test for hstore operation not supported in PostgreSQL 9.3
  - '! grep "tags->''[^'']\+'' IS" project.mml > /dev/null'
  # Test for classes in project.mml (not supported in vector tiles)
  - '! grep "class:" project.mml > /dev/null'
